<?php

function gift_memberships_civicrm_pre($op, $objectName, $objectId, &$objectRef) {
  if($objectName == 'Profile'){
    // if we are trying to save a profile & the honor fields are set then
    // let's stash them - then when the honor_contact is saved we'll have something
    // to match against when trying to grabe the id
    $honor_fields = array(
      'honor_first_name' => 1,
      'honor_last_name' => 1,
      'honor_email' => 1,
      'honor_prefix_id' => 1,
    );
    $honor_fields = array_intersect_key($objectRef, $honor_fields);
    if(count($honor_fields > 0)){
      gift_memberships_contribution_singleton($honor_fields);
    }
  }

  if ($objectName == 'Membership') {
    // so we'll retrieve the contact_id now
    $recipient = gift_memberships_contribution_singleton();
    if(is_integer($recipient)){
      $objectRef['contact_id'] = $recipient;
    }
  }

}


/*
 * Implementation of CiviCRM _civicrm_post hook
 *
 * http://wiki.civicrm.org/confluence/display/CRMDOC33/CiviCRM+hook+specification#CiviCRMhookspecification-hookcivicrmpost
 */
function gift_memberships_civicrm_post( $op, $objectName, $objectId, &$objectRef ) {
  if($objectName == 'Individual'){
    // this is the only point we have the honor_contact id so we grab it here & stash it
    gift_memberships_contribution_singleton(array(),$objectRef);
  }
}

/*
 * Implementation of CiviCRM _civicrm_validate hook. This hook is invoked when building a CiviCRM form. This hook should also be used to set the default values of a form element
 *
 * @formName string the name of the form
 * @form object reference to the form object
 * @source http://wiki.civicrm.org/confluence/display/CRMDOC33/CiviCRM+hook+specification#CiviCRMhookspecification-hookcivicrmvalidate

 function gift_memberships_civicrm_buildForm( $formName, &$form ){
 //	dpm($formName);
 	require_once 'CRM/Core/PseudoConstant.php';
  if($formName == 'CRM_Member_Form_Membership' || $formName == 'CRM_Member_Form_MembershipRenewal'){
   $form->addElement('checkbox', 'alternate_contributor', ts('Record payment from different contact?'));
   $form->add( 'select', 'honor_type_id', ts('Recognition As'),
                        array( '' => ts( '-') ) + CRM_Core_PseudoConstant::honor( ) );
 // $form->addElement('text', 'contact_select_id[999]', ts('999'));
   require_once 'CRM/Contact/Form/NewContact.php';
   // had hoped to pass a string instead of a fake number but it didn't load
   CRM_Contact_Form_NewContact::buildQuickForm( $form ,1, null, 'contribution_');
  }
 }

 */
/*
 * Implementation of CiviCRM _civicrm_postProcess hook. This hook is invoked when a CiviCRM
 * form is submitted. If the module has injected any form elements, this hook should save the values in the database.
 *
 * @formName string the name of the form
 * @form object reference to the form object
 * @source http://wiki.civicrm.org/confluence/display/CRMDOC33/CiviCRM+hook+specification#CiviCRMhookspecification-hookcivicrmpostProcess
 */function gift_memberships_civicrm_postProcess( $formName, &$form ){

 }

/*
function gift_memberships_civicrm_validate( $formName,$fields,$files, &$form ){
}
*/

function gift_memberships_contribution_singleton($honor_fields = null, $contact_object = null, $force = NULL) {
  static $honorcontactsingleton = array();
  if(!empty($honor_fields) || $force){
    $honorcontactsingleton = $honor_fields;
  }

  if(!empty($contact_object) && !empty($honorcontactsingleton)){
    // nb at this stage assuming last_name & first name are required
    if($contact_object->first_name == $honorcontactsingleton['honor_first_name']
    && $contact_object->last_name == $honorcontactsingleton['honor_last_name']){
      $honorcontactsingleton['contact_id'] = $contact_object->id;
    }
  }
  return CRM_Utils_Array::value('contact_id',$honorcontactsingleton);
}
